<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 58</value>
  </metadata>
  <metadata name="toolStrip2.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>162, 58</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="toolStripButton2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAJAAAACQCAYAAADnRuK4AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAEnQAABJ0Ad5mH3gAAA33SURBVHhe7Z3/kdW4EoX5m+LHhvBCeBlABpDBkgGTAWQA
        GUAGkAGbAZsBmwGbwXvnm2pPeXT7Wm1bsmVfnapTRTEtdau7LbVs2fdJR0dHR0dHR0dHR0dHR0dHR0fH
        WfHy5cs/hFfin+IH8Zv4Y8Rf4v8S8n9jGdrQlj5eWdcdZ4Mlyxvxk0jgf4tpcpQifaMDXW/QbWZ0HAkK
        HrMLswPB9AK9JbEBW/os1TJ0tf9XQfoi1pxh1hLbvmCrmd2xJxSI/yggXN1ezdI6sfk9Y7DhdGwFOf21
        nE8R6wXmiGRWem3D66gFS5wW6ppa/NETqQJuIHFS9kQqATmRGqfKUvXs2bN/Xrx48Zd0fBTvCNiIF3UJ
        /5fI0OYjfdCXp6MAv0lHr5GWQM6jOC6yo3r69Om/CvR3C3q1HRB9owNd6PRsWUB88MFUdOSgALBcrd5V
        MSuoL2aX3ZYCdGNDoRnq555jOQTkJO7ges4L0Waaz3J0c/dZsAnbCsxMfTZKIedS6/xMHBUmdYj6eGvd
        NQ9sxWZvLEFSZPfaCOBMOWRRrWOJc9hpHdtXJNJvfGdd3SbkhEVL1tETJ8XKRPpk3dwWNHCeW3kOuUor
        jE9bSDK2hQX3F+vi/JCTNN559Q6Fp9p9tC6Kw2wazgZxw3LqPBAyf9LGmhcHYzWdc0hddO7jIxaoWclj
        y1XxgtFseS8uLt5F2vJAtHjgGPOCZY2t/jmTyAI2K1hqU3zWITDqm9qr5LGP+5t99G1qigEfJLpyPF8S
        MSAGNhrkJG3JKl7rqO9id7evsMpdY3wx8/7ReZJobvLYklV08OqPw2Zrlqq5JIBFZyN8MnNJO0cSMZBk
        YFcpB321ZsUgJ75T3zVnnWuscp8GHzm6rvGHNTsmNIDwVl2O+WzNisGSx9W3FbHBzCmGmUl0zC0+CeEM
        xmUNJ7eQPAP3Hl+Ni7MqNDgeT7iDSdlS8sjRHPl4J/IU/eGBLP+2/3uHjNc2R7Utvpxhj6fLYw39VSBD
        2SaHag4cYM2KQX1SMIdrHtvxkTThghNZ2szcGVET1djmR5MI/e0X1TI0VDTXmlbVd7hol0M5L7TYqbSl
        D6/vK/xpTYtCvozWRG0X1SSFY/QFGbA1KYpoMG3WKXZmiL6isxE2WrOiiCZRLf2rIcM4SegaPaYG+pc1
        KQrpDy2dz58//1uyxady9NO3pzNhlaUM4FtH3wWJlTVpBzIsu3TYlV9lHY7MfjX1AxIjMhNJrsoswNiC
        M2GVpXQxcIhj5AUlVyXzcZyQnX0kV/2oKzo83QmrFbT42NF3QcndWZN9IUNCS4fkah7HuPN0jllTfwp0
        eTaMKZniO9ABEf1itaV0FmRI9r2tWnXPAOmYXD5rL10p0BVYSqouI8F66JuJ7wM5KjtdWvCqZTrBSnWm
        lEy1q/0a0OnZMia2m3hx4HNPZ0rJ7VdQy4Ds68YysOrSsXegrgGdqR0pJVP17jC+9/Qm3OfekIzLzj6c
        7zXxasjtvvT37ya6OdDt2TSQAJtoNUTOWBNLE98OUhyZfaobllvrZcPmy9cA6Z4s7rHdRKuBGHi6E247
        C0WM2sI5QLomX4PeIomvIeCnXyZaFbmLDG7qp9zUDLcyyNM9puzY7TVndHs2jWmiVRFIZC74Ko+XLiBj
        stX9VrMP8PSPaWK7wbNpTBOrjuAsVP++kJREbpJtNh16+sc0sd3g2TSmiVVHZBaSTP2701I0WXNsOfsA
        z4Yx5ZSbX8IGBGahujVZxCGS2fTkW26bKnuaLaJ5em+im4DYeHaMSYxNvDwotDylA7nrbKKbIXdVySE3
        vY1PkXvEIpvqnZ+WgsmHplWVXwE6PVsG6u83fSMxhWzKHTz7baJlocFGirDN6w1mGM+WMSVzk48yPBAj
        z5YxJVN+2Venk7uvLR5beAgG6uYepk4hUDeWnxnV8eSRiSpKgwgcJd30jQR0oXOk/4JbF9BjECvPpoFa
        5srWZuYQV9lAyey52+kHymaAWHk2jWmiZSCFk9u/PXZfY8i+0FlgyTVxpNXOSO2yfA3w7BqTmJvoerS8
        0xmQs9FYdSlT37sf742CmHm2DcSfJroe6ix3r2X3A9oELzILiVU+e2LJE30zZfezyMTMs28gMTfR9VCH
        k1eVjNntccEYsiNyAg8yExWzmb7oM9HhksBZs11hNrs2GsvcD5Ii9eUqeKCJNoHgy30D+Szd4tnIfMNX
        z7y+L7jnzsuDZ+OYJrYOctJkxb7X/Z9r4MoKLmUDmTlmfXXVEoevuoZmHdjK0jXGJs8R1cnkDbGia2Uh
        5GyeIK8o3f+Mt/p4WOL4N/8n8lXXRT8/pT6a+7xKoLZdf6tBnUzWFfzdRJsCg/fs3YNFAlEB7LQ8ewcW
        ia2U5B4ItvGKrIMWkqjV5AHEzrN5ILE30eUITHO73YGOQPa9nVkTFaHVPM0tW2MQO8/2gcTeRJfj6AkE
        ZGP00ytFiC50mvpm0RNoJmTrx5qzkc06TdaEHjZJIHWUe++q+SttDOyVY0r8cuADh8Q5oC9yNxPXfwDC
        6fQRTexwkPP4vuHdmqXNlqpZH+hsDd64xjSx5fA6HdPEDg1Lprfi1Z/x5v/4GzIme9ikGSMdZ0oTWw6v
        0zFNrOOg8GI6pokth9fpmCbWcVB4MR3TxJbD63RME+s4KLyYDmRzYGLLEdjGN3GUo2M+FLt+H6hjOXoC
        dazCVgl02IepHdNQ7HKv96z/ZlBOCX830Y6DYZPYqpPcgbLd38hYAo2L2/hvRI6k8ivOfPMRTp0y5G+D
        HG1o+4a+rNtDIbC6FDlQNrlOim397oIDjUFm3ifLkCjeOEpwSCySqvk71bIz97bx+vpWnWQ/aWeiTUF2
        M8MwQ2RftalIdHNwv8kZKrH1gsTeRNch9+S6SKYWgCU755b3TJprxKb3xYKyEsQsse8Ri9xEHMB2zlMy
        UMbsuhMzZ4R/IboBfsFmM38XEDPHrgcScxNdDynLbfd2KaQtcWrWNLX5Y69EChTQ5XbX6iz3bb06X7W6
        ghMkTsrNE0k6J99pK2qPOlOfvqKBWzhAOqhxzpQ4KUmk6jUSsXJ0PyIxN/EyyJ3ck8KqNxSlI/wKcZSM
        SVP5V2zHqWOa2gekfxc5fPZ1zYnGCX4wtVUguyffB2NMJloOOaVilW8MEyz1vXpXxa7CkuWOPq37YrCk
        ukNHbtcaJF8RqbL9V9+5c+7lJwMG4ykbs/SA1eeqWWeUNHt8zPJtoWQqOhvtEccH5F7GZ5Yy0VXQANTd
        8lpHdnB2uZmX+iyZJm+FZEhtVKQmIUZO/w+s+rEMrihP6Yird2NkP/0k/YaIfWrf7Ks1jC3gw2ss8k0j
        +kn6fUQSzETLQwOIVO+LH8DRVn3MTp7WEycFti5MJJJorX+9fh8ombq76dwyJi769bvI4FIqCCxVh0mc
        FNjOGLyxTRFfWRezoLaTm5Gqy9cAGR/5pO6sLFabWcUyhSl2WPPDg7EsKLbfW/MQiInTxyNu4lMpkS7f
        gIG6qsKPNiQ/6xkWfcuGw84618CYGJs35gl+seZZSDa7KSG2Jl4XGmh2/ZYx2VlIMpPP2FJKvtlv7ZQC
        Y/TGfo2Sz84axMJrOyYxNfH6iBgkTtZCcxxlS1aTZ2pqgLHOWdLwpTV1IZnI7FO3eE6hjM0Wf9eM0v9n
        f/hsoH3A4HRLVg6Mec5jEnxqTR8h4mtiaeLbQYZFZqGLxxtqF77PQ00g+VN8xGAJGDs+8Hzj0L1PpP+f
        fGwBiaWJb4vgLPTwXAWHCNHk2W5Nbhz4wvORw1/42Jrh72yNSQxNfHuQuZ5RKSV3f2Xo36FP5O46qEYx
        Yzn7hjw+d/52QWJ4r2AvBK8OnuVk7x9Bq3ludtm6BnwSTSLzdfYEQxOzPAMr8MT5nj15pjEniXK0nW0b
        vraMdw2NsqkBNQx8VOKCJWbWZRtYe2VoQPuuxQcCvvJ8GCWxsq7agQYVKto8qm3V47BnhOqXyA/suSRW
        1k1bIBE8g6fY5NVwECyZ9RWjth9CswX3DPdodc/N3WUuBWaSOfXQIW6PaFDhIq+JbeTBgQ8936Y81CZF
        hoafdUn29E/YawHfeT71SEys2TEwc3A9iWbiJvwbnV6Nn6xZRwbyVfgQ3uHLBA1gzim78Am7WwU+Snx2
        lfjemh0Xmj7n3n4v9g7UmYBPhPAbuvj8NH5ckEScbel3pg34Ap8kPrrKUyXPgAVJBKt+ZOAIwAeJTyZ5
        yuQZsDCJNvnkSWtgzIw98cUkT508Axigiru5L9Mxfd/MbMRYbcyeL1zi09MnzxhsLz1HZMiRzdPWRoyN
        MSZjzhJfWhe3BTls1jtQI7KsnSaRLHEWfY0EH1o3twk5YM3vuh86kdYkjj3bOtbjiVqQIxZ9ZGBEgvDG
        umse2Go2e2PJ8ubqnSjklNnniRJSeH5SP80dmMImbDMbPdtDVD+n+ahEFeDoBVt9j9y1ZTfzyrreHOg2
        G1Z/49G26DfzevdqyFkfV9RGKbnqeSeNnxqoFgT6RofpWjXTDLRapx/5XQI5bumXvCJku0wdwgxB0Jkt
        XqHT1F+Avw1y1oa29DF76x0hY5+ypyMIOfH1yiL7ULQiuS9XpXH2RLLE6Q+Ra4Ork+ndC8IRyVg0pr5U
        bQ05/Q/xLvDhz+aIzdjOGGw4HXtCgWBW+txyMmEbNmKrmd3RIgiQyI+h7F4vYQO29KQ5KBQ4lrm3Q0IV
        vLd0QfoeJQw6+/J0Vii4/LrOO4KtoH8n8LkEGxLEyOf3SBT66Dunjo6Ojo6Ojo6Ojo6Ojo6Ojo4T48mT
        /wPSerg6rgsCjwAAAABJRU5ErkJggg==
</value>
  </data>
</root>